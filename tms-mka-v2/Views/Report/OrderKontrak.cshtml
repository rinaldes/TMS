@* --- # region initial capital # --- *@
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Report Order";
    string currentController = "ListOrder";
    string currentAction = "Index";
}
@* --- # endregion initial capital # --- *@

@* --- # region main theme # --- *@
<div class="portlet light ">
    <div class="portlet-title">
        <div class="caption">
            <span class="caption-subject font-dark sbold uppercase">@ViewBag.Title</span>
        </div>
        <div class="actions">
            <a class="btn btn-sm green dropdown-toggle" href="/ListOrder/Exportkontrak" id="export">
                <i class="fa fa-upload"></i>Export
            </a>
        </div>
    </div>
    <div class="portlet-body form">
        <div class="portlet box blue ">
            <div class="portlet-title">
                <div class="caption">
                    Hide Colomn :
                </div>
                <div class="tools">
                    <a href="" class="expand"> </a>
                </div>
            </div>
            <div class="portlet-body form" style="display: none;">
                <form role="form">
                    <div class="form-body">
                        <div id="content-col" class="md-checkbox-inline" style="margin-left:10px"></div>
                    </div>
                </form>
            </div>
        </div>
        <div id="grid"></div>
    </div>
</div>
@* --- # endregion main theme # --- *@

@* --- # region section script # --- *@
@section scripts
{
    <script id="rute" type="text/x-kendo-template">
        # if(RuteRevised) { #
        <label style="color:red">#=Rute#</label>
        # } else { #
        <label>#=Rute#</label>
        # } #
    </script>
    <script id="jns-truck" type="text/x-kendo-template">
        # if(IsBatalTruk) { #
        <label style="color:red">#=StrJenisTruck#</label>
        # } else { #
        <label>#=StrJenisTruck#</label>
        # } #
    </script>
    <script id="jenisOrder-template" type="text/x-kendo-template">
        # if(TypeSo == "Konsolidasi") { #
        <a class="k-button-icon k-grid-edit" href="\\#" data-toggle="modal" data-target="\\#ModalDetailKonsoldasi" onclick="RefreshDetail(#:IdChild#)">Konsolidasi</a>
        # } else { #
        #: TypeSo #
        # } #
    </script>
    <script id="action-template" type="text/x-kendo-template">
        # if(JenisOrder != "Kontrak") { #
        <input class="combobox" />
        # } else { #
        <input class="combobox-kontrak" />
        # } #
    </script>
    <script id="dok-template" type="text/x-kendo-template">
        # if(DateRevised) { #
        <label style="color:red">#= TanggalMuat != null ? kendo.toString(kendo.parseDate(TanggalMuat, 'yyyy-MM-dd'), 'dd/MM/yyyy') : ''#</label>
        # } else { #
        <label>#= TanggalMuat != null ? kendo.toString(kendo.parseDate(TanggalMuat, 'yyyy-MM-dd'), 'dd/MM/yyyy') : ''#</label>
        # } #
    </script>
    <script type="text/javascript">
    function FilterStatus(element) {
        element.kendoDropDownList({
            //dataTextField: "text",
            //dataValueField: "value",
            dataSource: ["On call", "Kontrak", "Konsolidasi", "Pickup", "Batal"],
            optionLabel: "--Select Value--",
        });
    }

    // --- # region action warning message # ---
    $(document).ready(function () {
        @if (TempData["errorMsgListOrder"] != null)
            {
                <text>
        swal({
            title: "Error",
            type: 'error',
            text: '@TempData["errorMsgListOrder"]',
            showCloseButton: true,
        })
        </text>
            }
    })
    // --- # endregion action warning message # ---

    // --- # region grid # ---
    $(document).ready(function () {

        currController = '@currentController';
        currAction = '@currentAction';

        var ds = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("BindingKontrak")',
                    dataType: "json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options != '') {
                        return kendo.stringify(options);
                    }
                    else if (operation == "read") {
                        if (operation !== "read" && options != '') {
                            return kendo.stringify(options);
                        }
                        else if (operation == "read") {
                            if (options.filter) {
                                filter = options.filter.filters;
                                for (var i in filter) {
                                    if (filter[i].field == "SONumber") {
                                        filter[i].field = "NoSo";
                                    }
                                    if (filter[i].field == "TanggalMuat") {
                                        filter[i].field = "MuatDate";
                                        Date.prototype.yyyymmdd = function() {
                                            var mm = this.getMonth() + 1; // getMonth() is zero-based
                                            var dd = this.getDate();

                                            return [this.getFullYear(),
                                                    (mm>9 ? '' : '0') + mm,
                                                    (dd>9 ? '' : '0') + dd
                                            ].join('-');
                                        };
                                        filter[i].value = filter[i].value.yyyymmdd()
                                    }
                                    if (filter[i].field == "NamaCustomer")
                                        filter[i].field = "SalesOrderKontrak.Customer.CustomerNama";
                                    if (filter[i].field == "KodeNama")
                                        filter[i].field = "SalesOrderKontrak.Customer.CustomerCodeOld";
                                    if (filter[i].field == "VehicleNo")
                                        filter[i].field = "DataTruck.VehicleNo";
                                    if (filter[i].field == "StrJenisTruck")
                                        filter[i].field = "SalesOrderKontrak.JenisTrucks.StrJenisTruck";
                                    if (filter[i].field == "Driver1")
                                        filter[i].field = "Driver1.NamaDriver";
                                }
                            }
                            if (options.sort) {
                                sort = options.sort;
                                for (var i in sort) {
                                    if (sort[i].field == "SONumber")
                                        sort[i].field = "NoSo";
                                    if (sort[i].field == "TanggalMuat") {
                                        sort[i].field = "MuatDate";
                                        Date.prototype.yyyymmdd = function() {
                                            var mm = this.getMonth() + 1; // getMonth() is zero-based
                                            var dd = this.getDate();

                                            return [this.getFullYear(),
                                                    (mm>9 ? '' : '0') + mm,
                                                    (dd>9 ? '' : '0') + dd
                                            ].join('-');
                                        };
                                        sort[i].value = sort[i].value.yyyymmdd()
                                    }
                                    if (sort[i].field == "NamaCustomer")
                                        sort[i].field = "SalesOrderKontrak.Customer.CustomerNama";
                                    if (sort[i].field == "KodeNama")
                                        sort[i].field = "SalesOrderKontrak.Customer.CustomerCodeOld";
                                    if (sort[i].field == "VehicleNo")
                                        sort[i].field = "DataTruck.VehicleNo";
                                    if (sort[i].field == "StrJenisTruck")
                                        sort[i].field = "SalesOrderKontrak.JenisTrucks.StrJenisTruck";
                                    if (sort[i].field == "StatusFlow")
                                        sort[i].field = "Status";
                                    if (sort[i].field == "Driver1")
                                        sort[i].field = "Driver1.NamaDriver";
                                }
                            }
                        }
                        $('#export').attr('href', "/ListOrder/ExportKontrak?" + jQuery.param(options).replace('take=10', 'take=100000000'))
                        return options;
                    }
                }
            },
            schema: {
                total: "total", data: "data", model: {
                    fields: {
                        "Id": {type: "number"}, "IdSoKontrak": {type: "number"}, "DN": {type: "string"}, "JenisOrder": {type: "string"}, "SONumber": {type: "string"}, "TanggalMuat": {type: "date"},
                        "NamaCustomer": {type: "string"}, "StrProduct": {type: "string"}, "Suhu": {type: "number"}, "Rute": {type: "string"}, "StrMultidrop": {type: "string"}, "StrJenisTruck": {type: "string"},
                        "StatusFlow": {type: "string"}, "FlowDate": {type: "date"}, "StatusBatal": {type: "string"}, "StatusDokumen": {type: "string"}, "PenanganKhusus": {type: "string"},
                        "VehicleNo": {type: "string"}, "Driver1": {type: "string"}, "DateRevised": {type: "boolean"}
                    }
                }
            }, pageSize: 10, pageable: true, sortable: true, serverFiltering: true, serverPaging: true, serverSorting: true,
        });
        gridIndex = $("#grid").kendoGrid({
            dataSource: ds, filterable: kendoGridFilterable, sortable: true, reorderable: true, resizable: true, scrollable: true, pageable: true, groupable: true,
            columns: [
                {
                    field: "JenisOrder",
                    title: "Jenis Order", template: kendo.template($("#jenisOrder-template").html()), width: "100px", filterable: {ui: FilterStatus, operators: {string: {eq: "Sama Dengan"}}, extra: false}
                },
                {field: "DN", width: "147px"}, {field: "SONumber", title: "No SO", width: "120px"}, {field: "TanggalMuat", title: "Tgl Muat", width: "100px", template: kendo.template($("#dok-template").html())},
                {field: "JamMuat", title: "Jam Muat", width: "77px", template: "#= JamMuat != null ? kendo.toString(new Date(1, 1, 1, JamMuat.Hours, JamMuat.Minutes), 'hh : mm') : ''#", filterable: false},
                {field: "KodeNama", title: "Kode Nama", width: "100px"}, {field: "NamaCustomer", title: "Customer", width: "200px"}, {field: "StrProduct", title: "Jenis Barang", width: "150px"},
                {field: "Suhu", title: "Target Suhu", width: "100px"}, {field: "Rute", template: kendo.template($("#rute").html()), width: "150px"}, {field: "StrMultidrop", title: "Multidrop", width: "150px"},
                {field: "StrJenisTruck", title: "Jenis Truck", template: kendo.template($("#jns-truck").html()), width: "100px"}, {field: "StatusFlow", title: "Status Flow", width: "150px"}, 
                {field: "FlowDate", title: "Flow Date", width: "100px", template: "#= FlowDate != null ? kendo.toString(kendo.parseDate(FlowDate, 'yyyy-MM-dd'), 'dd/MM/yyyy') : ''#"},
                {field: "StatusBatal", title: "Status Batal", width: "150px"}, {field: "StatusDokumen", title: "Status Dokumen", width: "150px"},
                {field: "PenanganKhusus", title: "Penangan Khusus", width: "300px"}, {width: "105px", field: "VehicleNo", title: "Vehicle No"}, {width: "189px", field: "Driver1", title: "Driver"},
                {width: "133px", title: "Action", template: kendo.template($("#action-template").html())},
            ],
            dataBound: function (e) {
                var data = gridIndex.dataSource.data();
                var order_action = [{ text: "View Detail", value: "View Detail" }];
                @if (User.HasMenuAccess("Maju 1 Flow")){
                    <text>
                order_action.push({ text: "Maju 1 Flow", value: "Maju 1 Flow" })
                    </text>
                }
                order_action.push({ text: "Print Surat Jalan", value: "Print Surat Jalan" })
                $.each(data, function (i, row) {
                    $('tr[data-uid="' + row.uid + '"]').find(".combobox-kontrak").kendoDropDownList({
                        optionLabel: "Select Action",
                        dataTextField: "text",
                        dataValueField: "value",
                        dataSource: order_action,
                        change: function dropDownChange() {
                            if (this.value() == "View Detail")
                                window.location.href = "@Url.Action("DetailKontrak", "Report")" + "?id=" + data[i].Id + "&idsokontrak=" + data[i].IdSoKontrak;
                            else if (this.value() == "Print Surat Jalan") {
                                window.open("/AdminUangJalan/ShowPrintSuratJalan?idSo=" + data[i].Id + "&listSo=", '_blank', 'location=yes,scrollbars=yes,status=yes');
                            }
                            else if (this.value() == "Maju 1 Flow") {
                                window.location.href = "@Url.Action("Maju1Flow", "Report")" + "?idSo=" + data[i].Id + "&idsokontrak=" + data[i].IdSoKontrak;
                            }
                        }
                    })
                });
            },
        }).data("kendoGrid");
        @foreach (tms_mka_v2.Context.UserReference item in (List<tms_mka_v2.Context.UserReference>)ViewBag.listKolom)
                {
                    <text>
        listKolom.push('@item.Coloumn');
        </text>
                }

        GetColomnData(gridIndex);
    });


    function RefreshDetail(Id) {
        var dsDetail = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("FindDetailSo", "SalesOrderProsesKonsolidasi")?id=' + Id,
                    dataType: "json"
                },
            },
            schema: {
                total: "total",
                data: "data",
                model: {
                    fields: {
                        "NamaCustomer": { type: "string" },
                        "StrProduct": { type: "string" },
                        "Rute": { type: "string" },
                        "Tonase": { type: "number" , defaultValue: 0},
                        "karton": { type: "number" , defaultValue: 0},
                        "Pallet": { type: "number" , defaultValue: 0},
                        "Container": { type: "number" , defaultValue: 0},
                        "m3": { type: "number" , defaultValue: 0},
                    }
                }
            },
            aggregate: [
                { field: "Tonase", aggregate: "sum" },
                { field: "karton", aggregate: "sum" },
                { field: "Pallet", aggregate: "sum" },
                { field: "Container", aggregate: "sum" },
                { field: "m3", aggregate: "sum" }],
            pageSize: 10,
            pageable: true,
            sortable: true,
        });

        $("#GridDetailKonsoldasi").kendoGrid({
            dataSource: dsDetail,
            filterable: kendoGridFilterable,
            sortable: true,
            reorderable: true,
            resizable: true,
            pageable: true,
            columns: [
            { field: "NamaCustomer", title: "Customer" },
            { field: "StrProduct", title: "Jenis Barang" },
            { field: "Rute", title: "Tujuan" },
            { field: "Tonase", title: "Tonase", template: "#= Tonase != null ? Tonase : 0 #", footerTemplate: "Total : #=sum#" },
            { field: "karton", title: "Karton", template: "#= karton != null ? karton    : 0 #", footerTemplate: "Total : #=sum#" },
            { field: "Pallet", title: "Pallet", template: "#= Pallet != null ? Pallet : 0 #", footerTemplate: "Total : #=sum#" },
            { field: "Container", title: "Container", template: "#= Container != null ? Container : 0 #", footerTemplate: "Total : #=sum#" },
            { field: "m3", title: "m3", template: "#= m3 != null ? m3 : 0 #", footerTemplate: "Total : #=sum#" }
            ],
        });
    }


    // --- # endregion grid # ---
</script>
}
@* --- # region section script # --- *@
@*Modal Detail Konsoldasi*@
<div id="ModalDetailKonsoldasi" class="modal fade bs-modal-full" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-full">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            </div>
            <div class="modal-body">
                <div id="GridDetailKonsoldasi"></div>
            </div>
        </div>
    </div>
</div>